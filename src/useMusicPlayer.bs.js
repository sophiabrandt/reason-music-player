// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var MusicPlayer$ReactHooksTemplate = require("./MusicPlayer.bs.js");

function useMusicPlayer(param) {
  var match = React.useContext(MusicPlayer$ReactHooksTemplate.musicPlayerContext);
  var dispatch = match[1];
  var state = match[0];
  var isPlaying = state[/* isPlaying */3];
  var trackList = state[/* tracks */1];
  var currentTrackIndex = state[/* currentTrackIndex */2];
  var togglePlay = function (param) {
    return Curry._1(dispatch, /* TogglePlay */0);
  };
  var playTrack = function (index) {
    var match = state[/* currentTrackIndex */2];
    if (match !== undefined) {
      var match$1 = index === match;
      if (match$1) {
        return Curry._1(dispatch, /* TogglePlay */0);
      } else {
        return Curry._1(dispatch, /* PlayTrack */[index]);
      }
    } else {
      return Curry._1(dispatch, /* PlayTrack */[index]);
    }
  };
  var playPreviousTrack = function (param) {
    var match = state[/* currentTrackIndex */2];
    if (match !== undefined) {
      return playTrack(match - 1 | 0);
    } else {
      return Curry._1(dispatch, /* PlayTrack */[0]);
    }
  };
  var playNextTrack = function (param) {
    var match = state[/* currentTrackIndex */2];
    if (match !== undefined) {
      return playTrack(match + 1 | 0);
    } else {
      return Curry._1(dispatch, /* PlayTrack */[0]);
    }
  };
  return /* tuple */[
          isPlaying,
          trackList,
          currentTrackIndex,
          togglePlay,
          playTrack,
          playPreviousTrack,
          playNextTrack
        ];
}

exports.useMusicPlayer = useMusicPlayer;
/* react Not a pure module */
