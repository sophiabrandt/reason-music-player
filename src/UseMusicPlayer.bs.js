// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as MusicPlayer$ReasonMusicPlayer from "./MusicPlayer.bs.js";

function useMusicPlayer(param) {
  var match = React.useContext(MusicPlayer$ReasonMusicPlayer.musicPlayerContext);
  var dispatch = match[1];
  var state = match[0];
  var isPlaying = state[/* isPlaying */2];
  var trackList = state[/* tracks */0];
  var currentTrackIndex = state[/* currentTrackIndex */1];
  var match$1 = state[/* currentTrackIndex */1];
  var currentTrackName = match$1 !== undefined ? Caml_array.caml_array_get(state[/* tracks */0], match$1)[/* name */0] : "";
  var togglePlay = function (param) {
    return Curry._1(dispatch, /* TogglePlay */0);
  };
  var playTrack = function (index) {
    var match = state[/* currentTrackIndex */1];
    if (match !== undefined) {
      var match$1 = index === match;
      if (match$1) {
        return Curry._1(dispatch, /* TogglePlay */0);
      } else {
        return Curry._1(dispatch, /* PlayTrack */[index]);
      }
    } else {
      return Curry._1(dispatch, /* PlayTrack */[index]);
    }
  };
  var playPreviousTrack = function (param) {
    var match = state[/* currentTrackIndex */1];
    if (match !== undefined) {
      var idx = match;
      Curry._1(dispatch, /* TogglePlay */0);
      var match$1 = idx === 0;
      if (match$1) {
        return playTrack(idx);
      } else {
        return playTrack(idx - 1 | 0);
      }
    } else {
      return /* () */0;
    }
  };
  var playNextTrack = function (param) {
    var trackListEnd = trackList.length - 1 | 0;
    var match = state[/* currentTrackIndex */1];
    if (match !== undefined) {
      var idx = match;
      Curry._1(dispatch, /* TogglePlay */0);
      var match$1 = idx === trackListEnd;
      if (match$1) {
        return playTrack(idx);
      } else {
        return playTrack(idx + 1 | 0);
      }
    } else {
      return /* () */0;
    }
  };
  return /* tuple */[
          isPlaying,
          trackList,
          currentTrackIndex,
          currentTrackName,
          togglePlay,
          playTrack,
          playPreviousTrack,
          playNextTrack
        ];
}

export {
  useMusicPlayer ,
  
}
/* react Not a pure module */
